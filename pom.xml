<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.12.RELEASE</version>
    </parent>

    <groupId>org.dukecon</groupId>
    <artifactId>dukecon-server</artifactId>
    <version>1.7-SNAPSHOT</version>
    <packaging>pom</packaging>

    <developers>
        <developer>
            <id>ascheman</id>
            <name>Gerd Aschemann</name>
            <email>gerd.aschemann@dukecon.org</email>
        </developer>
        <developer>
            <id>sippsack</id>
            <name>Falk Sippach</name>
            <email>falk.sippach@dukecon.org</email>
        </developer>
        <developer>
            <id>niko</id>
            <name>Niko KÃ¶bler</name>
            <email>niko.koebler@dukecon.org</email>
        </developer>
        <developer>
            <id>anna</id>
            <name>Anna Maier</name>
            <email>anna.maier@dukecon.org</email>
        </developer>
        <developer>
            <id>steffi</id>
            <name>Stephanie Peters</name>
            <email>stephanie.peters@dukecon.org</email>
        </developer>
        <developer>
            <id>chris</id>
            <name>Christofer Dutz</name>
            <email>christofer.dutz@dukecon.org</email>
        </developer>
        <developer>
            <id>ahus</id>
            <name>Alexander Schwarz</name>
            <email>alexander.schwarz@dukecon.org</email>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/dukecon/dukecon_server.git</url>
        <connection>scm:git:git@github.com:dukecon/dukecon_server.git</connection>
    </scm>
    <name>DukeCon Server</name>
    <description>Reference server implementation for a conference planner</description>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <minimum-maven.version>3.6.0</minimum-maven.version>
        <minimum-java.version>1.8</minimum-java.version>
        <maven.compiler.source>${minimum-java.version}</maven.compiler.source>
        <maven.compiler.target>${minimum-java.version}</maven.compiler.target>

        <!-- Set this to localhost if you would like to test upload server -->
        <nexus.repository.prot>https</nexus.repository.prot>
        <nexus.repository.host>dev.dukecon.org</nexus.repository.host>
        <nexus.repository.port/>
        <nexus.repository.base>/nexus</nexus.repository.base>

        <surefire.argline/>

        <arquillian.config>arquillian-headless.xml</arquillian.config>

        <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
        <asciidoctor.html.output.directory>${base.generated.docs.dir}/html</asciidoctor.html.output.directory>
        <asciidoctor.pdf.output.directory>${base.generated.docs.dir}/pdf</asciidoctor.pdf.output.directory>
        <base.generated.docs.dir>${project.build.directory}/generated-docs</base.generated.docs.dir>
        <generated.asciidoc.directory>${base.generated.docs.dir}/asciidoc</generated.asciidoc.directory>

        <swagger.input.directory>${project.basedir}/src/main/swagger</swagger.input.directory>

        <!-- Please keep (version) properties in alphabetical order! -->
        <arquillian-bom.version>1.6.0.Final</arquillian-bom.version>
        <arquillian-drone-bom.version>2.5.1</arquillian-drone-bom.version>
        <arquillian-phantom-binary.version>2.1.1</arquillian-phantom-binary.version>
        <asciidoctor-maven-plugin.version>2.1.0</asciidoctor-maven-plugin.version>
        <asciidoctorj.diagram.version>${asciidoctor-maven-plugin.version}</asciidoctorj.diagram.version>
        <assertj-core.version>3.17.2</assertj-core.version>
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <buildplan-maven-plugin.version>1.4</buildplan-maven-plugin.version>
        <docker-maven-plugin.version>0.39.1</docker-maven-plugin.version>
        <flyway-maven-plugin.version>7.1.0</flyway-maven-plugin.version>
        <freemarker.version>2.3.30</freemarker.version>
        <git-commit-id-plugin.version>4.0.3</git-commit-id-plugin.version>
        <gitlog-maven-plugin.version>1.13.17</gitlog-maven-plugin.version>
        <gmavenplus-plugin.version>1.12.1</gmavenplus-plugin.version>
        <graphene-webdriver.version>2.3.2</graphene-webdriver.version>
        <google-guava.version>30.0-jre</google-guava.version>
        <groovy.version>2.5.8</groovy.version>
        <groovycsv.version>1.3</groovycsv.version>
        <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
        <hamcrest-library.version>2.2</hamcrest-library.version>
        <hibernate-jpa-2.1-api.version>1.0.2</hibernate-jpa-2.1-api.version>
        <hibernate-validator.version>6.1.6.Final</hibernate-validator.version>
        <hystrix-javanica.version>1.5.18</hystrix-javanica.version>
        <jackson-annotations.version>2.11.3</jackson-annotations.version>
        <jackson-dataformat-csv.version>2.11.3</jackson-dataformat-csv.version>
        <javax.el.version>3.0.1-b12</javax.el.version>
        <javax.inject.version>1</javax.inject.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <javax.validation-api.version>2.0.1.Final</javax.validation-api.version>
        <javax.ws.rs-api.version>2.1.1</javax.ws.rs-api.version>
        <!-- DO NOT UPGRADE TO 2.28 (and beyond?) - it is missing
        "org.glassfish.jersey.internal.l10n.LocalizableMessageFactory$ResourceBundleSupplier" -->
        <jersey-server.version>2.27</jersey-server.version>
        <jgiven.version>1.2.0</jgiven.version>
        <jgravatar.version>1.2</jgravatar.version>
        <jqassistant-maven-plugin.version>1.9.1</jqassistant-maven-plugin.version>
        <jqassistant.plugin.git.version>1.8.0</jqassistant.plugin.git.version>
        <junit.version>4.13.1</junit.version>
        <keycloak.version>11.0.3</keycloak.version>
        <lombok.version>1.18.16</lombok.version>
        <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
        <!-- DO NOT UPGRADE TO 1.11.2 and beyond - it leads to "analyze failed: Unsupported api 524288" -->
        <maven-dependency-analyzer.version>1.11.1</maven-dependency-analyzer.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <maven-surefire-plugin.version>${maven-failsafe-plugin.version}</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>${maven-failsafe-plugin.version}</maven-surefire-report-plugin.version>
        <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
        <micrometer-core.version>1.5.6</micrometer-core.version>
        <micrometer-registry-prometheus.version>1.5.6</micrometer-registry-prometheus.version>
        <postgresql.version>42.2.18.jre7</postgresql.version>
        <selenium.version>3.13.0</selenium.version>
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <commons-io.version>2.8.0</commons-io.version>
        <commons-lang.version>3.11</commons-lang.version>
        <spock.version>1.3-groovy-2.5</spock.version>
        <spring-boot.version>2.1.9.RELEASE</spring-boot.version>
        <spring-cloud-dependencies.version>Greenwich.RELEASE</spring-cloud-dependencies.version>
        <spring-cloud-starter-hystrix.version>1.4.6.RELEASE</spring-cloud-starter-hystrix.version>
        <swagger-annotations.version>1.6.2</swagger-annotations.version>
        <snakeyaml.version>1.27</snakeyaml.version>
        <!-- Version 3.1.8 throws an NPE - UPGRADE WITH CARE -->
        <swagger-maven-plugin.version>3.1.7</swagger-maven-plugin.version>
        <swagger2markup-maven-plugin.version>1.3.7</swagger2markup-maven-plugin.version>
        <wagon-webdav-jackrabbit.version>3.4.0</wagon-webdav-jackrabbit.version>
        <!-- Version 1.x >= 1.4.01 needed by arquillian / selenium? -->
        <xml-apis.version>2.0.2</xml-apis.version>

        <!-- Check automatic versions from time to time! -->
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>dukecon-snapshots</id>
            <name>DukeCon Snapshots</name>
            <url>
                http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/snapshots
            </url>
        </snapshotRepository>
        <repository>
            <id>dukecon-releases</id>
            <name>DukeCon Snapshots</name>
            <url>
                http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/releases
            </url>
        </repository>
        <site>
            <id>dukecon-site</id>
            <name>DukeCon Site</name>
            <url>
                dav:http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/site/${project.groupId}/${project.artifactId}/${project.version}
            </url>
        </site>
    </distributionManagement>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/dukecon/dukecon_server/issues</url>
    </issueManagement>

    <dependencyManagement>
        <dependencies>
            <!-- Start with imports and keep them in alphabetical order by groupId, then artifactId! -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.keycloak.bom</groupId>
                <artifactId>keycloak-adapter-bom</artifactId>
                <version>${keycloak.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.selenium</groupId>
                <artifactId>selenium-bom</artifactId>
                <version>${selenium.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-bom</artifactId>
                <version>${arquillian-drone-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Please keep dependencies in alphabetical order by groupId, then artifactId! -->
            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-javanica</artifactId>
                <version>${hystrix-javanica.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${jackson-dataformat-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.timgroup</groupId>
                <artifactId>jgravatar</artifactId>
                <version>${jgravatar.version}</version>
            </dependency>
            <dependency>
                <groupId>com.tngtech.jgiven</groupId>
                <artifactId>jgiven-core</artifactId>
                <version>${jgiven.version}</version>
            </dependency>
            <dependency>
                <groupId>com.tngtech.jgiven</groupId>
                <artifactId>jgiven-junit</artifactId>
                <version>${jgiven.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xlson.groovycsv</groupId>
                <artifactId>groovycsv</artifactId>
                <version>${groovycsv.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax.inject.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <type>pom</type>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-testng</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-dateutil</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-templates</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${javax.el.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey-server.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest-library.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${hibernate-jpa-2.1-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.core</groupId>
                <artifactId>arquillian-core-spi</artifactId>
                <version>${arquillian-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-api</artifactId>
                <version>${arquillian-drone-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-phantom-binary</artifactId>
                <version>${arquillian-phantom-binary.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver</artifactId>
                <version>${graphene-webdriver.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver-api</artifactId>
                <version>${graphene-webdriver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver-impl</artifactId>
                <version>${graphene-webdriver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.junit</groupId>
                <artifactId>arquillian-junit-core</artifactId>
                <version>${arquillian-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.junit</groupId>
                <artifactId>arquillian-junit-standalone</artifactId>
                <version>${arquillian-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.test</groupId>
                <artifactId>arquillian-test-api</artifactId>
                <version>${arquillian-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.test</groupId>
                <artifactId>arquillian-test-spi</artifactId>
                <version>${arquillian-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <!-- Make sure this aligns with the runtime (docker) environments! -->
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-api</artifactId>
                <version>${selenium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-firefox-driver</artifactId>
                <version>${selenium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-remote-driver</artifactId>
                <version>${selenium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-support</artifactId>
                <version>${selenium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-spring</artifactId>
                <version>${spock.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix</artifactId>
                <version>${spring-cloud-starter-hystrix.version}</version>
            </dependency>
            <dependency>
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <version>${xml-apis.version}</version>
            </dependency>

            <!-- This is sometimes needed at runtime -->
            <!--dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-core</artifactId>
                <version>${activemq.version}</version>
            </dependency-->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>api</module>
        <module>repositories</module>
	    <module>resources</module>
        <module>converters</module>
        <module>impl</module>
    </modules>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav-jackrabbit</artifactId>
                <version>${wagon-webdav-jackrabbit.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-configuration-processor</artifactId>
                                <version>${spring-boot.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>analyze</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <ignoreNonCompile>true</ignoreNonCompile>
                                <verbose>true</verbose>
                                <!-- Most of the following dependencies are used during runtime - so the plugin cannot detect it currently -->
                                <ignoredUnusedDeclaredDependencies>
                                    <ignoredUnusedDeclaredDependency>com.h2database:h2</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.hibernate.validator:hibernate-validator</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.keycloak:keycloak-spring-boot-starter</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.springframework.boot:spring-boot-starter-actuator</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.springframework.boot:spring-boot-starter-data-jpa</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.springframework.boot:spring-boot-starter-web</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.springframework.cloud:spring-cloud-starter-hystrix</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.shared</groupId>
                            <artifactId>maven-dependency-analyzer</artifactId>
                            <version>${maven-dependency-analyzer.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>${minimum-maven.version}</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>${minimum-java.version}</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <argLine>${surefire.argline}</argLine>
                        <includes>
                            <include>**/*Spec.java</include>
                            <include>**/*Spec.groovy</include>
                            <include>**/*IT.java</include>
                            <include>**/*IT.groovy</include>
                        </includes>
                        <excludes>
                            <exclude>**/Abstract*</exclude>
                        </excludes>
                        <systemProperties>
                            <!-- when you run the tests in the IDE, arquillian.xml is used
                            with a firefox browser served by a remote selenium. -->
                            <!-- when you run the tests from maven, use the arquillian-headless.xml
                            instead that uses a phantom headless browser -->
                            <property>
                                <name>arquillian.xml</name>
                                <value>${arquillian.config}</value>
                            </property>
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!-- For now this makes the BlazeDS integration work in the tests -->
                        <forkCount>1</forkCount>
                        <argLine>${surefire.argline}</argLine>
                        <useFile>false</useFile>
                        <includes>
                            <include>**/*Test*.java</include>
                            <include>**/*Test*.groovy</include>
                        </includes>
                        <systemProperties>
                            <!-- when you run the tests in the IDE, arquillian.xml is used
                            with a firefox browser served by a remote selenium. -->
                            <!-- when you run the tests from maven, use the arquillian-headless.xml
                            instead that uses a phantom headless browser -->
                            <property>
                                <name>arquillian.xml</name>
                                <value>${arquillian.config}</value>
                            </property>
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>filter-git-ids</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>resources</goal>
                            </goals>
                            <configuration>
                                <filters>
                                    <filter>${project.build.outputDirectory}/git.properties</filter>
                                </filters>
                                <delimiters>
                                    <delimiter>${*}</delimiter>
                                </delimiters>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources-filtered</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*.txt</include>
                                            <include>**/*.html</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.buschmais.jqassistant</groupId>
                    <artifactId>jqassistant-maven-plugin</artifactId>
                    <version>${jqassistant-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <executions>
                        <execution>
                            <goals>
                                <goal>scan</goal>
                                <goal>analyze</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failOnSeverity>MAJOR</failOnSeverity>
                        <useExecutionRootAsProjectRoot>true</useExecutionRootAsProjectRoot>
                        <scanIncludes>
                            <scanInclude>
                                <path>${project.basedir}/.git</path>
                            </scanInclude>
                        </scanIncludes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>de.kontext-e.jqassistant.plugin</groupId>
                            <artifactId>jqassistant.plugin.git</artifactId>
                            <version>${jqassistant.plugin.git.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>fr.jcgay.maven.plugins</groupId>
                    <artifactId>buildplan-maven-plugin</artifactId>
                    <version>${buildplan-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${asciidoctor-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-diagram</artifactId>
                            <version>${asciidoctorj.diagram.version}</version>
                        </dependency>
                    </dependencies>
                    <!-- Configure generic document generation settings -->
                    <configuration>
                        <requires>
                            <require>asciidoctor-diagram</require>
                        </requires>
                        <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
                        <sourceDocumentName>index.adoc</sourceDocumentName>
                        <attributes>
                            <doctype>book</doctype>
                            <toc>left</toc>
                            <toclevels>2</toclevels>
                            <generated>${generated.asciidoc.directory}</generated>
                        </attributes>
                    </configuration>
                    <!-- Since each execution can only handle one backend, run
                         separate executions for each desired output type -->
                    <executions>
                        <execution>
                            <id>output-html</id>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>process-asciidoc</goal>
                            </goals>
                            <configuration>
                                <backend>html5</backend>
                                <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${gmavenplus-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>addSources</goal>
                                <goal>addTestSources</goal>
                                <goal>generateStubs</goal>
                                <goal>compile</goal>
                                <goal>generateTestStubs</goal>
                                <goal>compileTests</goal>
                                <goal>removeStubs</goal>
                                <goal>removeTestStubs</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>
                                        <directory>${project.basedir}/src/main/java</directory>
                                        <includes>
                                            <include>**/*.groovy</include>
                                        </includes>
                                    </source>
                                </sources>
                                <testSources>
                                    <testSource>
                                        <directory>${project.basedir}/src/test/java</directory>
                                        <includes>
                                            <include>**/*.groovy</include>
                                        </includes>
                                    </testSource>
                                </testSources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${buildnumber-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <doCheck>false</doCheck>
                        <doUpdate>false</doUpdate>
                        <revisionOnScmFailure>_localbuild</revisionOnScmFailure>
                        <shortRevisionLength>8</shortRevisionLength>
                        <format>{0,date,yyyy-MM-dd_HH:mm:ss}</format>
                        <items>
                            <item>timestamp</item>
                        </items>
                    </configuration>
                </plugin>
                <plugin>
                    <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>${lifecycle-mapping.version}</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.sebastian-daschner
                                        </groupId>
                                        <artifactId>
                                            jaxrs-analyzer-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.3,)
                                        </versionRange>
                                        <goals>
                                            <goal>analyze-jaxrs</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.tngtech.jgiven</groupId>
                    <artifactId>jgiven-maven-plugin</artifactId>
                    <version>${jgiven.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <format>html5</format>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>${git-commit-id-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <excludeProperties>tags</excludeProperties>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>${groovy-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>${groovy.version}</version>
                        <type>pom</type>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <modules>
                <module>docker</module>
            </modules>
        </profile>
        <profile>
            <id>dukecon</id>
            <repositories>
                <repository>
                    <id>dukecon</id>
                    <url>
                        ${nexus.repository.prot}://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/groups/public/
                    </url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <!-- Make the site plugin happy: It needs to find some information about GEMs -->
                    <id>gemfire-repository</id>
                    <name>Gemfire Repository</name>
                    <url>
                        ${nexus.repository.prot}://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/repositories/gemfire-release-proxy/
                    </url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>dukecon</id>
                    <url>
                        http://${nexus.repository.host}${nexus.repository.port}${nexus.repository.base}/content/groups/public/
                    </url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <profile>
            <id>jqa</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.buschmais.jqassistant</groupId>
                        <artifactId>jqassistant-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>doc</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.github.kongchen</groupId>
                            <artifactId>swagger-maven-plugin</artifactId>
                            <version>${swagger-maven-plugin.version}</version>
                            <configuration>
                                <apiSources>
                                    <apiSource>
                                        <springmvc>false</springmvc>
                                        <locations>org.dukecon.server</locations>
                                        <schemes>http,https</schemes>
                                        <host>dukecon.org</host>
                                        <basePath>/rest</basePath>
                                        <info>
                                            <title>DukeCon API</title>
                                            <version>v1</version>
                                            <description>Documentation of the DukeCon REST API.</description>
                                            <termsOfService>https://dukecon.org/</termsOfService>
                                        </info>
                                        <!-- Support classpath or file absolute path here.
                                            1) classpath e.g: "classpath:/markdown.hbs", "classpath:/templates/hello.html"
                                            2) file e.g: "${basedir}/src/main/resources/markdown.hbs",
                                                "${basedir}/src/main/resources/template/hello.html"
                                        -->
                                        <!--
                                            <templatePath>${basedir}/templates/strapdown.html.hbs</templatePath>
                                        -->
                                        <outputPath>${project.build.directory}/generated/document.html</outputPath>
                                        <swaggerDirectory>${project.build.directory}/swagger-ui</swaggerDirectory>
                                        <attachSwaggerArtifact>true</attachSwaggerArtifact>
                                    </apiSource>
                                </apiSources>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>process-classes</phase>
                                    <goals>
                                        <goal>generate</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>io.github.swagger2markup</groupId>
                            <artifactId>swagger2markup-maven-plugin</artifactId>
                            <version>${swagger2markup-maven-plugin.version}</version>
                            <configuration>
                                <swaggerInput>${project.build.directory}/swagger-ui</swaggerInput>
                                <outputDir>${generated.asciidoc.directory}</outputDir>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>process-classes</phase>
                                    <goals>
                                        <goal>convertSwagger2markup</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- Copy the static docs into build.outputDirectory to be included in the jar -->
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-resources</id>
                                    <phase>process-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/docs</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${asciidoctor.html.output.directory}</directory>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>Unix Profile</id>
            <activation>
                <file>
                    <exists>/dev/urandom</exists>
                </file>
            </activation>
            <properties>
                <surefire.argline>-Djava.security.egd=file:/dev/./urandom</surefire.argline>
            </properties>
        </profile>
        <profile>
            <id>check-plugins</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-maven-plugins</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requirePluginVersions>
                                            <message>Best Practice is to always define plugin versions!</message>
                                            <banLatest>true</banLatest>
                                            <banRelease>true</banRelease>
                                            <banSnapshots>true</banSnapshots>
                                            <phases>clean,deploy,site</phases>
                                            <unCheckedPluginList>org.apache.maven.plugins:maven-enforcer-plugin,org.apache.maven.plugins:maven-idea-plugin,org.springframework.boot:spring-boot-maven-plugin</unCheckedPluginList>
                                        </requirePluginVersions>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>com.github.danielflower.mavenplugins</groupId>
                <artifactId>gitlog-maven-plugin</artifactId>
                <version>${gitlog-maven-plugin.version}</version>
                <configuration>
                    <simpleHTMLChangeLogFilename>gitlog.html</simpleHTMLChangeLogFilename>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>
